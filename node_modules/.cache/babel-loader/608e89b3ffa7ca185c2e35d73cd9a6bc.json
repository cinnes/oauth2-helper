{"ast":null,"code":"var _jsxFileName = \"/home/cinnes/Documents/Github/oauth2-helper/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport rp from 'request-promise';\nimport DetailsForm from './DetailsForm';\nimport { Card, Elevation, Button, Code, Switch, Pre } from '@blueprintjs/core';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n    this.state = {\n      darkMode: true,\n      clientId: localStorage.getItem('clientId') || '',\n      clientSecret: localStorage.getItem('clientSecret') || '',\n      authEndpoint: localStorage.getItem('authEndpoint') || '',\n      tokenEndpoint: localStorage.getItem('tokenEndpoint') || '',\n      authCode: params.get('code'),\n      homeUrl: 'https://dd9a22d6.ngrok.io/',\n      tokenResponse: '',\n      tokenError: ''\n    };\n    this.updateState = this.updateState.bind(this);\n    this.redirect = this.redirect.bind(this);\n    this.getToken = this.getToken.bind(this);\n    this.toggleDarkMode = this.toggleDarkMode.bind(this);\n  }\n\n  render() {\n    var main;\n    var tokenBlock;\n\n    if (this.state.tokenResponse) {\n      tokenBlock = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Token Response\"), React.createElement(Pre, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Code, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.state.tokenResponse)));\n    } else if (this.state.tokenError) {\n      tokenBlock = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Error\"), React.createElement(Pre, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Code, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.state.tokenError)));\n    } else {\n      tokenBlock = React.createElement(Button, {\n        disabled: this.state.tokenResponse,\n        onClick: this.getToken,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Fetch Token\");\n    }\n\n    if (this.state.authCode) {\n      main = React.createElement(Card, {\n        interactive: false,\n        elevation: Elevation.TWO,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Authorisation Code: \"), React.createElement(Pre, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Code, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.state.authCode)), tokenBlock);\n    } else {\n      main = React.createElement(Card, {\n        interactive: false,\n        elevation: Elevation.TWO,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(DetailsForm, {\n        changeHandler: this.updateState,\n        submitHandler: this.redirect,\n        clientId: this.state.clientId,\n        clientSecret: this.state.clientSecret,\n        authEndpoint: this.state.authEndpoint,\n        tokenEndpoint: this.state.tokenEndpoint,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }));\n    }\n\n    const appClass = this.state.darkMode ? \"App bp3-dark\" : \"App\";\n    return React.createElement(\"div\", {\n      className: appClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      checked: this.state.darkMode,\n      label: \"Dark Mode\",\n      onChange: this.toggleDarkMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), main));\n  }\n\n  updateState(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  redirect(event) {\n    localStorage.setItem('clientId', this.state.clientId);\n    localStorage.setItem('clientSecret', this.state.clientSecret);\n    localStorage.setItem('authEndpoint', this.state.authEndpoint);\n    localStorage.setItem('tokenEndpoint', this.state.tokenEndpoint);\n    event.preventDefault();\n    const url = \"\".concat(this.state.authEndpoint, \"?response_type=code&client_id=\").concat(this.state.clientId, \"&redirect_uri=\").concat(this.state.homeUrl, \"&scope=read write\");\n    window.location = url;\n  }\n\n  getToken() {\n    const authCode = this.state.authCode;\n    const options = {\n      uri: encodeURI(this.state.tokenEndpoint),\n      method: 'POST',\n      body: {\n        code: authCode,\n        client_id: this.state.clientId,\n        client_secret: this.state.clientSecret,\n        grant_type: \"authorization_code\"\n      },\n      json: true\n    };\n    const that = this;\n    rp.post(options).then(function (res) {\n      that.setState({\n        tokenResponse: JSON.stringify(res, null, 1)\n      });\n    }).catch(function (err) {\n      that.setState({\n        tokenError: JSON.stringify(err.error, null, 1)\n      });\n    });\n  }\n\n  toggleDarkMode() {\n    this.setState({\n      darkMode: !this.state.darkMode\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/cinnes/Documents/Github/oauth2-helper/src/App.js"],"names":["React","rp","DetailsForm","Card","Elevation","Button","Code","Switch","Pre","App","Component","constructor","props","search","window","location","params","URLSearchParams","state","darkMode","clientId","localStorage","getItem","clientSecret","authEndpoint","tokenEndpoint","authCode","get","homeUrl","tokenResponse","tokenError","updateState","bind","redirect","getToken","toggleDarkMode","render","main","tokenBlock","TWO","appClass","event","name","target","value","setState","setItem","preventDefault","url","options","uri","encodeURI","method","body","code","client_id","client_secret","grant_type","json","that","post","then","res","JSON","stringify","catch","err","error"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport rp from 'request-promise';\nimport DetailsForm from './DetailsForm';\n\nimport { Card, Elevation, Button, Code, Switch, Pre } from '@blueprintjs/core';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n\n    this.state = {\n      darkMode: true,\n      clientId: localStorage.getItem('clientId') || '',\n      clientSecret: localStorage.getItem('clientSecret') || '',\n      authEndpoint: localStorage.getItem('authEndpoint') || '',\n      tokenEndpoint: localStorage.getItem('tokenEndpoint') || '',\n      authCode: params.get('code'),\n      homeUrl: 'https://dd9a22d6.ngrok.io/',\n      tokenResponse: '',\n      tokenError: ''\n    };\n\n    this.updateState = this.updateState.bind(this);\n    this.redirect = this.redirect.bind(this);\n    this.getToken = this.getToken.bind(this);\n    this.toggleDarkMode = this.toggleDarkMode.bind(this);\n  }\n\n  render() {\n    var main;\n\n    var tokenBlock;\n\n    if (this.state.tokenResponse) {\n      tokenBlock = \n        <div>\n          <h4>Token Response</h4>\n          <Pre><Code>{this.state.tokenResponse}</Code></Pre>\n        </div>\n    } else if (this.state.tokenError) {\n      tokenBlock = \n        <div>\n          <h4>Error</h4>\n          <Pre><Code>{this.state.tokenError}</Code></Pre>\n        </div>\n    } else {\n      tokenBlock = <Button disabled={this.state.tokenResponse} onClick={this.getToken}>Fetch Token</Button>\n    }\n\n    if (this.state.authCode) {\n      main = \n        <Card interactive={false} elevation={Elevation.TWO}>\n          <h4>Authorisation Code: </h4>\n          <Pre><Code>{this.state.authCode}</Code></Pre>\n          {tokenBlock}\n        </Card>\n    } else {\n      main =\n        <Card interactive={false} elevation={Elevation.TWO}>\n          <DetailsForm \n            changeHandler={this.updateState} \n            submitHandler={this.redirect}\n            clientId={this.state.clientId}\n            clientSecret={this.state.clientSecret}\n            authEndpoint={this.state.authEndpoint}\n            tokenEndpoint={this.state.tokenEndpoint}/>\n        </Card>\n    }\n\n    const appClass = this.state.darkMode ? \"App bp3-dark\" : \"App\";\n\n    return (\n      <div className={appClass}>\n        <div className=\"container center\">\n          <Switch checked={this.state.darkMode} label=\"Dark Mode\" onChange={this.toggleDarkMode} />\n          {main}\n        </div>\n      </div>\n    );\n  }\n  \n  updateState(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n  \n  redirect(event) {\n    localStorage.setItem('clientId', this.state.clientId);\n    localStorage.setItem('clientSecret', this.state.clientSecret);\n    localStorage.setItem('authEndpoint', this.state.authEndpoint);\n    localStorage.setItem('tokenEndpoint', this.state.tokenEndpoint);\n    \n    event.preventDefault();\n    const url = `${this.state.authEndpoint}?response_type=code&client_id=${this.state.clientId}&redirect_uri=${this.state.homeUrl}&scope=read write`\n    window.location = url;\n  }\n\n  getToken() {\n    const authCode = this.state.authCode;\n\n    const options = {\n      uri: encodeURI(this.state.tokenEndpoint),\n      method: 'POST',\n      body: {\n        code: authCode,\n        client_id: this.state.clientId,\n        client_secret: this.state.clientSecret,\n        grant_type: \"authorization_code\"\n      },\n      json: true\n    };\n\n    const that = this;\n    rp.post(options)\n      .then(function(res) {\n        that.setState({\n          tokenResponse: JSON.stringify(res, null, 1),\n        });\n      })\n      .catch(function(err) {\n        that.setState({\n          tokenError: JSON.stringify(err.error, null, 1),\n        });\n      });\n  }\n\n  toggleDarkMode() {\n    this.setState({\n      darkMode: !this.state.darkMode,\n    });\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/cinnes/Documents/Github/oauth2-helper/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport rp from 'request-promise';\nimport DetailsForm from './DetailsForm';\nimport { Card, Elevation, Button, Code, Switch, Pre } from '@blueprintjs/core';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n    this.state = {\n      darkMode: true,\n      clientId: '1x46iftmdzqtt',\n      clientSecret: '4ctdx7k5du36r5q1qfkarhw2ts5tbbhyv13c8yar0es6k40cwg',\n      authEndpoint: 'https://api.capsulecrm.com/oauth/authorise',\n      tokenEndpoint: 'https://api.capsulecrm.com/oauth/token',\n      authCode: params.get('code'),\n      homeUrl: 'https://40807517.ngrok.io/',\n      accessToken: ''\n    };\n    this.updateState = this.updateState.bind(this);\n    this.nextStage = this.nextStage.bind(this);\n    this.getToken = this.getToken.bind(this);\n    this.toggleDarkMode = this.toggleDarkMode.bind(this);\n  }\n\n  render() {\n    var main;\n    var tokenBlock;\n\n    if (this.accessToken) {\n      tokenBlock = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Pre, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Code, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.state.authCode)));\n    }\n\n    if (this.state.authCode) {\n      main = React.createElement(Card, {\n        interactive: false,\n        elevation: Elevation.ONE,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Authorisation Code: \"), React.createElement(Pre, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Code, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.state.authCode)), React.createElement(Button, {\n        onClick: this.getToken,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Fetch Token\"));\n    } else {\n      main = React.createElement(Card, {\n        interactive: false,\n        elevation: Elevation.ONE,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(DetailsForm, {\n        changeHandler: this.updateState,\n        submitHandler: this.nextStage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    }\n\n    const appClass = this.state.darkMode ? \"App bp3-dark\" : \"App\";\n    return React.createElement(\"div\", {\n      className: appClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      checked: this.state.darkMode,\n      label: \"Dark Mode\",\n      onChange: this.toggleDarkMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), main));\n  }\n\n  updateState(event) {\n    console.log('asdsad');\n    console.log(event);\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  nextStage(event) {\n    event.preventDefault();\n    const url = \"\".concat(this.state.authEndpoint, \"?response_type=code&client_id=\").concat(this.state.clientId, \"&redirect_uri=\").concat(this.state.homeUrl, \"&scope=read write\");\n    console.log(url);\n    window.location = url;\n  }\n\n  getToken() {\n    const authCode = this.state.authCode;\n    const options = {\n      uri: this.state.tokenEndpoint,\n      method: 'POST',\n      body: {\n        code: authCode,\n        client_id: this.state.clientId,\n        client_secret: this.state.clientSecret,\n        grant_type: \"authorization_code\"\n      },\n      json: true\n    };\n    rp.post(options).then(function (res) {\n      const json = JSON.parse(res.body);\n      this.setState({\n        accessToken: json.access_token\n      });\n    });\n  }\n\n  toggleDarkMode() {\n    this.setState({\n      darkMode: !this.state.darkMode\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/cinnes/Documents/Github/oauth2-helper/src/App.js"],"names":["React","rp","DetailsForm","Card","Elevation","Button","Code","Switch","Pre","App","Component","constructor","props","search","window","location","params","URLSearchParams","state","darkMode","clientId","clientSecret","authEndpoint","tokenEndpoint","authCode","get","homeUrl","accessToken","updateState","bind","nextStage","getToken","toggleDarkMode","render","main","tokenBlock","ONE","appClass","event","console","log","name","target","value","setState","preventDefault","url","options","uri","method","body","code","client_id","client_secret","grant_type","json","post","then","res","JSON","parse","access_token"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport rp from 'request-promise';\nimport DetailsForm from './DetailsForm';\n\nimport { Card, Elevation, Button, Code, Switch, Pre } from '@blueprintjs/core';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n\n    this.state = {\n      darkMode: true,\n      clientId: '1x46iftmdzqtt',\n      clientSecret: '4ctdx7k5du36r5q1qfkarhw2ts5tbbhyv13c8yar0es6k40cwg',\n      authEndpoint: 'https://api.capsulecrm.com/oauth/authorise',\n      tokenEndpoint: 'https://api.capsulecrm.com/oauth/token',\n      authCode: params.get('code'),\n      homeUrl: 'https://40807517.ngrok.io/',\n      accessToken: ''\n    };\n\n    this.updateState = this.updateState.bind(this);\n    this.nextStage = this.nextStage.bind(this);\n    this.getToken = this.getToken.bind(this);\n    this.toggleDarkMode = this.toggleDarkMode.bind(this);\n  }\n\n  render() {\n    var main;\n    var tokenBlock;\n\n    if (this.accessToken) {\n      tokenBlock = \n        <div>\n          <Pre>\n            <Code>{this.state.authCode}</Code>\n          </Pre>\n        </div>\n    }\n\n    if (this.state.authCode) {\n      main = \n        <Card interactive={false} elevation={Elevation.ONE}>\n          <h4>Authorisation Code: </h4>\n          <Pre>\n            <Code>{this.state.authCode}</Code>\n          </Pre>\n          <Button onClick={this.getToken}>Fetch Token</Button>\n        </Card>\n    } else {\n      main =\n        <Card interactive={false} elevation={Elevation.ONE}>\n          <DetailsForm \n            changeHandler={this.updateState} \n            submitHandler={this.nextStage}/>\n        </Card>\n    }\n\n    const appClass = this.state.darkMode ? \"App bp3-dark\" : \"App\";\n\n    return (\n      <div className={appClass}>\n        <div className=\"container center\">\n          <Switch checked={this.state.darkMode} label=\"Dark Mode\" onChange={this.toggleDarkMode} />\n          {main}\n        </div>\n      </div>\n    );\n  }\n  \n  updateState(event) {\n    console.log('asdsad')\n    console.log(event)\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n  \n  nextStage(event) {\n    event.preventDefault();\n    const url = `${this.state.authEndpoint}?response_type=code&client_id=${this.state.clientId}&redirect_uri=${this.state.homeUrl}&scope=read write`\n    console.log(url)\n    window.location = url;\n  }\n\n  getToken() {\n    const authCode = this.state.authCode;\n\n    const options = {\n      uri: this.state.tokenEndpoint,\n      method: 'POST',\n      body: {\n        code: authCode,\n        client_id: this.state.clientId,\n        client_secret: this.state.clientSecret,\n        grant_type: \"authorization_code\"\n      },\n      json: true\n    };\n\n    rp.post(options)\n      .then(function(res) {\n        const json = JSON.parse(res.body);\n        this.setState({\n          accessToken: json.access_token,\n        });\n      })\n  }\n\n  toggleDarkMode() {\n    this.setState({\n      darkMode: !this.state.darkMode,\n    });\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
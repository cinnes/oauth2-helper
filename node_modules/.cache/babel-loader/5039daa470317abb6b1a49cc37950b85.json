{"ast":null,"code":"var _jsxFileName = \"/home/cinnes/Documents/Github/oauth2-helper/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport rp from 'request-promise';\nimport DetailsForm from './DetailsForm';\nimport { Card, Elevation, Button } from '@blueprintjs/core';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n    this.state = {\n      clientId: '1x46iftmdzqtt',\n      clientSecret: '4ctdx7k5du36r5q1qfkarhw2ts5tbbhyv13c8yar0es6k40cwg',\n      authEndpoint: 'https://api.capsulecrm.com/oauth/authorise',\n      tokenEndpoint: 'https://api.capsulecrm.com/oauth/token',\n      authCode: params.get('code'),\n      homeUrl: 'https://40807517.ngrok.io/'\n    };\n    this.updateState = this.updateState.bind(this);\n    this.nextStage = this.nextStage.bind(this);\n    this.getToken = this.getToken.bind(this);\n  }\n\n  render() {\n    var main;\n\n    if (this.state.authCode) {\n      main = React.createElement(Card, {\n        interactive: false,\n        elevation: Elevation.ONE,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Your authorisation code is: \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.state.authCode), React.createElement(\"button\", {\n        onClick: this.getToken,\n        className: \"button\",\n        value: \"Access Token\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Submit\"));\n    } else {\n      main = React.createElement(DetailsForm, {\n        changeHandler: this.updateState,\n        submitHandler: this.nextStage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, main));\n  }\n\n  updateState(event) {\n    console.log('asdsad');\n    console.log(event);\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  nextStage(event) {\n    event.preventDefault();\n    const url = \"\".concat(this.state.authEndpoint, \"?response_type=code&client_id=\").concat(this.state.clientId, \"&redirect_uri=\").concat(this.state.homeUrl, \"&scope=read write\");\n    console.log(url);\n    window.location = url;\n  }\n\n  getToken() {\n    const authCode = this.state.authCode;\n    const options = {\n      uri: this.state.tokenEndpoint,\n      method: 'POST',\n      body: {\n        code: authCode,\n        client_id: this.state.clientId,\n        client_secret: this.state.clientSecret,\n        grant_type: \"authorization_code\"\n      },\n      json: true\n    };\n    rp.post(options).then(function (res) {\n      console.log(res);\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/cinnes/Documents/Github/oauth2-helper/src/App.js"],"names":["React","rp","DetailsForm","Card","Elevation","Button","App","Component","constructor","props","search","window","location","params","URLSearchParams","state","clientId","clientSecret","authEndpoint","tokenEndpoint","authCode","get","homeUrl","updateState","bind","nextStage","getToken","render","main","ONE","event","console","log","name","target","value","setState","preventDefault","url","options","uri","method","body","code","client_id","client_secret","grant_type","json","post","then","res"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport rp from 'request-promise';\nimport DetailsForm from './DetailsForm';\n\nimport { Card, Elevation, Button } from '@blueprintjs/core';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n\n    this.state = {\n      clientId: '1x46iftmdzqtt',\n      clientSecret: '4ctdx7k5du36r5q1qfkarhw2ts5tbbhyv13c8yar0es6k40cwg',\n      authEndpoint: 'https://api.capsulecrm.com/oauth/authorise',\n      tokenEndpoint: 'https://api.capsulecrm.com/oauth/token',\n      authCode: params.get('code'),\n      homeUrl: 'https://40807517.ngrok.io/'\n    };\n\n    this.updateState = this.updateState.bind(this);\n    this.nextStage = this.nextStage.bind(this);\n    this.getToken = this.getToken.bind(this);\n  }\n\n  render() {\n    var main;\n\n    if (this.state.authCode) {\n      main = \n        <Card interactive={false} elevation={Elevation.ONE}>\n          <h4>Your authorisation code is: </h4>\n          <p>{this.state.authCode}</p>\n          <button onClick={this.getToken} className=\"button\" value=\"Access Token\"/>\n          <Button>Submit</Button>\n        </Card>\n    } else {\n      main =\n        <DetailsForm \n          changeHandler={this.updateState} \n          submitHandler={this.nextStage}/>\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\"/>\n        <div className=\"container center\">\n          {main}\n        </div>\n      </div>\n    );\n  }\n  \n  updateState(event) {\n    console.log('asdsad')\n    console.log(event)\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n  \n  nextStage(event) {\n    event.preventDefault();\n    const url = `${this.state.authEndpoint}?response_type=code&client_id=${this.state.clientId}&redirect_uri=${this.state.homeUrl}&scope=read write`\n    console.log(url)\n    window.location = url;\n  }\n\n  getToken() {\n    const authCode = this.state.authCode;\n\n    const options = {\n      uri: this.state.tokenEndpoint,\n      method: 'POST',\n      body: {\n        code: authCode,\n        client_id: this.state.clientId,\n        client_secret: this.state.clientSecret,\n        grant_type: \"authorization_code\"\n      },\n      json: true\n    };\n\n    rp.post(options)\n      .then(function(res) {\n        console.log(res);\n      })\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}